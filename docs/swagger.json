{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample file server API for web IDE",
        "title": "File Server API",
        "contact": {},
        "license": {
            "name": "MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/files/{path}": {
            "put": {
                "description": "Upload a new file or update existing file content",
                "consumes": [
                    "application/octet-stream",
                    "text/plain",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Upload or create file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "File content",
                        "name": "file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File updated",
                        "schema": {
                            "$ref": "#/definitions/fileserver.UploadResponse"
                        }
                    },
                    "201": {
                        "description": "File created",
                        "schema": {
                            "$ref": "#/definitions/fileserver.UploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/fileserver.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/fileserver.ErrorResponse"
                        }
                    },
                    "413": {
                        "description": "File too large",
                        "schema": {
                            "$ref": "#/definitions/fileserver.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/fileserver.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a file or empty directory",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Delete file or directory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File or directory path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Delete directory recursively",
                        "name": "recursive",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/fileserver.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/fileserver.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "$ref": "#/definitions/fileserver.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/fileserver.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check if the server is running",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/{path}": {
            "get": {
                "description": "Get a file's content or list directory contents",
                "produces": [
                    "application/json",
                    "application/octet-stream",
                    "text/html"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Get file or directory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File or directory path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/html"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "Accept",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/fileserver.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "$ref": "#/definitions/fileserver.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "fileserver.DirectoryResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 5
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/fileserver.FileInfo"
                    }
                },
                "path": {
                    "type": "string",
                    "example": "/folder"
                },
                "totalSize": {
                    "type": "integer",
                    "example": 10240
                }
            }
        },
        "fileserver.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "File not found"
                },
                "message": {
                    "type": "string",
                    "example": "The requested file does not exist"
                },
                "path": {
                    "type": "string",
                    "example": "/invalid/path"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                }
            }
        },
        "fileserver.FileInfo": {
            "type": "object",
            "properties": {
                "isDir": {
                    "type": "boolean",
                    "example": false
                },
                "mimeType": {
                    "type": "string",
                    "example": "text/plain"
                },
                "modTime": {
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                },
                "name": {
                    "type": "string",
                    "example": "example.txt"
                },
                "path": {
                    "type": "string",
                    "example": "/folder/example.txt"
                },
                "size": {
                    "type": "integer",
                    "example": 1024
                }
            }
        },
        "fileserver.UploadResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "File created successfully"
                },
                "path": {
                    "type": "string",
                    "example": "/folder/example.txt"
                },
                "size": {
                    "type": "integer",
                    "example": 1024
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                }
            }
        }
    }
}